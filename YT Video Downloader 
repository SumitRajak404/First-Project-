{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/SumitRajak404/First-Project-/blob/main/YT%20Video%20Downloader%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install -q pytube\n",
        "from pytube import YouTube\n",
        "from google.colab import files\n",
        "import re\n",
        "#@title **Youtube Video Downloader**\n",
        "\n",
        "URL = 'https://youtu.be/ryUNe3cp0ro?si=GAyVlFCNCqGgIw0J' #@param {type:\"string\"}\n",
        "\n",
        "# Use a regular expression to extract the video ID from the URL\n",
        "video_id_match = re.search(r'youtu\\.be/([^/?]+)', URL)\n",
        "if video_id_match:\n",
        "    video_id = video_id_match.group(1)\n",
        "    # Create a YouTube object\n",
        "    yt = YouTube(f'https://www.youtube.com/watch?v={video_id}')\n",
        "\n",
        "# Create a YouTube object\n",
        "yt = YouTube(URL)\n",
        "\n",
        "Resolution = '1080p' #@param ['144p', '240p', '360p', '480p', '720p', '1080p']\n",
        "# Choose the stream with the desired resolution and format (e.g., '720p', 'mp4')\n",
        "stream = yt.streams.filter(res=Resolution, file_extension='mp4').first()\n",
        "\n",
        "# Download the video\n",
        "stream.download(output_path='/content')\n",
        "\n",
        "# Specify the local file you want to make accessible\n",
        "local_file_path = '/content/' + stream.default_filename\n",
        "\n",
        "# Trigger a download link for the file\n",
        "files.download(local_file_path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "id": "ZSiCTTBrUqJW",
        "outputId": "501dc9db-1eb7-4593-cfc6-835a06df9f29"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_902e0d29-deff-411b-b144-e68b79e30a91\", \"Apna Time Aayega (Gully Boy).mp4\", 32675971)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMvMMyKhHrV2s8pl9ybZ6q5",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}